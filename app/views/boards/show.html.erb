
<div class="progress progress-striped active center-progress">
  <div class="bar" style="width: 100%;"></div>
</div>

<%= render :partial => 'lateral' %>

<ul id="board" class="main-content main-content-big scroll hide" data-dropzone="statuses">


<% @statuses.each_with_index do |status , j|%>

	<li draggable="false" data-id="<%= status.id %>" data-pos="<%= j+1 %>" data-selector ="status" class='column' >
		
		<%= link_to "+", new_project_status_task_path(@project, status), :data => {:toggle => "modal", :remote => true, :target => '#modal'}, :class=>"btn pull-right" %>
		<h4 class='block text-center handle'><%= status.name%></h4>

		<ul class='sortable test' data-id='<%=status.id%>' data-dropzone="tasks"> 
			<% status.tasks.each_with_index do |task , i| %>


					<li data-id="<%= task.id %>" class='task block' data-selector="task">

						<div class="task-info block">

									<span class='task-type' style="background-color: <%= task.label.color %>" >
										<%= task.label.name %>
									</span>
									<span class='task-time'>
										<%= task.estimated_hours %>
									</span>
						</div>
						<h5>
							<%= link_to task.name, project_status_task_path(task.status.project, task.status, task) ,:data => {:toggle => "modal", :remote => true, :target => '#modal-large'} %>
						</h5>


						<div class="task-users block">
							<% task.users.each do |user| %>
								<img src='/assets/NA.png' data-toggle='tooltip' title="<%=user.email%>"></img>
							<% end %>
						</div>
					</li>
	
			<% end %>
		</ul>

	</li>
<% end %>

<%= link_to "+", new_project_status_path(:project_id => @project.id),:class=>"add" %>

</ul>

<%- content_for(:javascripts) do -%>
  <!-- <script type="text/javascript">var p_id =<%= @project.id %></script> -->
  <!-- <%= javascript_include_tag "boards_controller" %> -->
  <script type="text/javascript">
 /* var grids;

  var elementUp;

  function onColumn(elem){
  	elementUp = elem;

  	console.log($(elementUp));
  }


  function makeItDraggable(elem){

  	 var parentElem = elem.parentElement;
            if (!parentElem) {
                parentElem = elem.parentNode;
            }
            if (parentElem) {
  							parentElem.setAttribute('draggable', true);
  					}

  }

  function notMoreDraggable(elem){

  	var parentElem = elem.parentElement;
            if (!parentElem) {
                parentElem = elem.parentNode;
            }
            if (parentElem) {
  							parentElem.setAttribute('draggable', false);
  					}

  }

function hasClass(element, cls) {
    return (' ' + element.className + ' ').indexOf(' ' + cls + ' ') > -1;
}
*/ 

  $(function(){ //DOM Ready
 
     /*grids = $(".gridster ul").gridster({
        widget_margins: [10, 5],
        widget_base_dimensions: [240, 110],
        min_cols: <%= @statuses.count %>,
        draggable: {
            stop: function(event, ui){
                var id = this.$helper[0].attributes[0].value;
                var row = this.$helper[0].attributes[1].value;
                var col = this.$helper[0].attributes[2].value;
                $.post( "tasks/update_status", { task_id: id, col: col } );

            }
        }

    });*/

    
	//$('.sortable').sortable();
	//$('.sortable').tsort({});

$('#board').sortable({
  handle: ".handle",
   stop: function(event, ui){
            var children = $(ui.item).parents("#board").children("li");

            children.each(function() {

              var id = $(this).data("id");
              var col = $(this).index();

              console.log(id +":"+col);

              $.post( "statuses/update_order", { status_id: id, num: col } );

            })
            


      }
});

  $( "ul.sortable" ).sortable({
      connectWith: "ul.sortable",
      start: function (event, ui) {
            $(ui.item).addClass("dragging");    
            ui.placeholder.addClass("sortable-placeholder") ;                           
      },
      stop: function(event, ui){
            $(ui.item).removeClass("dragging");
            var id = $(ui.item).data("id");
            var col = $(ui.item).parents(".column").data("id");
            $.post( "tasks/update_status", { task_id: id, col: col } );


      }
    });
 	
  $('.ltl-nav').removeClass('hide');
  $('.main-content').removeClass('hide');
	$('.progress').addClass('hide');

	$('.main-content').addClass('slide-left');
	$('.ltl-nav').addClass('slide-right');
	var w = $('.column').outerWidth()*<%= @statuses.count %>;

  //$('#board').tsort({handle: '.handle'});

/*
	$(".column").each(
function(){
	this.addEventListener('dragstart', function(event) {
  console.log('Drag Interaction Started!');

  if(hasClass(event.target,"column")){

 }

});



this.addEventListener("dragenter", function( event ) {

if(hasClass(event.target,"column")){
	elementUp = event.target;}
	else {

var parentElem = event.target.parentElement;
            if (!parentElem) {
                parentElem = event.target.parentNode;
            }


            if(parentElem){

            	if(hasClass(parentElem,"column")){
								elementUp = parentElem;}
								else{

										var parentParentElem = parentElem.parentElement;
            if (!parentParentElem) {
                parentParentElem = parentElem.parentNode;
            }
            if(parentParentElem){
							elementUp = parentParentElem;

            }




								}


            }


	}

});




	this.addEventListener('dragend', function(event) {


		if(hasClass(event.target,"column")){
			event.target.setAttribute('draggable', false);
  		console.log('Drag Interaction Stoped!');

  		if(elementUp!=event.target){

   var el = $(event.target);
   el.remove();

  		$(event.target).insertAfter(elementUp);
$('.sortable').sortable();

  	}
		}

});



}
		);
*/
});

  </script>
<%- end -%>

</ul>